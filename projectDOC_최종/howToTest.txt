#project 폴더를 fabric-samples/chaincode에 넣는다
#first network ./byfn.sh 실행
#docker exec -it cli bash

이후 docker cli에서

#peer 설정 

export CORE_PEER_ADDRESS=peer0.org1.example.com:7051

#chaincode install
peer chaincode install -n doccc -v 1.0 -p github.com/chaincode/projectDOC

#chaincode msp 설정 및 기타 설정
export CORE_PEER_LOCALMSPID=Org1MSP
export CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
export PEER0_ORG1_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt

export ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem

#instantiate
peer chaincode instantiate -o orderer.example.com:7050 --tls --cafile $ORDERER_CA -C mychannel -n doccc -v 1.0 -c '{"Args":["Init"]}'

#완료 될시

#createDocument
peer chaincode invoke -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n doccc -c '{"Args":["createDocument","IDstudent01","jhyun","happy@cau","c-link","student","01012345678", "hello this is DOC string", "false"]}'

#queryAllDocs
peer chaincode invoke -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n doccc -c '{"Args":["queryAllDocs"]}'

#checkIntegrity
peer chaincode invoke -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n doccc -c '{"Args":["checkIntegrity","DOC0001", "hello this is DOC string"]}'

#queryDoc
peer chaincode invoke -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n doccc -c '{"Args":["queryDoc", "DOC0001"]}'

#deleteDocument
peer chaincode invoke -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n doccc -c '{"Args":["deleteDocument", "DOC0001"]}'

#이후 checkIntegrity, deleteDocument 호출로 변화된 데이터 queryAllDocs
peer chaincode invoke -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n doccc -c '{"Args":["queryAllDocs"]}'

#블록 생성 확인
docker logs peer0.org1.example.com